#!/bin/bash
SCRIPT_DIR=$(realpath "$(dirname "$0")")
RUNTIME_PATH=$(realpath -s "${SCRIPT_DIR}/../") # Assuming color_env.sh is in scripts/ relative to this test file's parent

# load print_colored()
#   - usage: print_colored "message contents" "type"
#      - types: ERROR FAIL INFO WARNING DEBUG RED BLUE YELLOW GREEN
source "${RUNTIME_PATH}/scripts/color_env.sh"
source "${RUNTIME_PATH}/scripts/common_util.sh"


SANITY_CHECK_ARGS=""
# Parse command-line arguments
for i in "$@"; do
    case $i in
        --dx_driver)
            SANITY_CHECK_ARGS="dx_driver"
            shift # past argument=value
            ;;
        --dx_rt)
            SANITY_CHECK_ARGS="dx_rt"
            shift # past argument=value
            ;;
        *)
            print_colored "Unknown option: $i" "ERROR" >&2
            ;;
    esac
done

# check_sanity_status.sh
# This script executes Sanity.sh and reports its pass/fail status.
pushd ${RUNTIME_PATH}/dx_rt
SANITY_CHECK_CMD="./SanityCheck.sh ${SANITY_CHECK_ARGS}"

echo "Attempting to run the DeepX SDK sanity check..."
echo "---"

# Execute Sanity.sh and capture its exit status
# We use `sudo` here because Sanity.sh requires root privileges.
# The '2>/dev/null' suppresses any stderr output from the sudo command itself,
# but the script's output will still be shown.
sudo $SANITY_CHECK_CMD
SANITY_STATUS=$?
popd

echo "---"
print_colored "Sanity Check Result:" "INFO"

if [[ $SANITY_STATUS -eq 0 ]]; then
    print_colored "✅ PASS: All sanity checks passed successfully." "GREEN"
elif [[ $SANITY_STATUS -eq 1 ]]; then
    print_colored "❌ FAIL: One or more sanity checks failed." "FAIL"
    print_colored "Please review the logs generated by SanityCheck.sh for details." "RED"
elif [[ $SANITY_STATUS -eq 2 ]]; then
    print_colored "⚠️  ERROR: SanityCheck.sh was not run with sufficient permissions (e.g., as root)." "ERROR"
    print_colored "Please ensure you run this script with 'sudo'." "RED"
else
    print_colored "❓ UNKNOWN: SanityCheck.sh exited with an unexpected status code: $SANITY_STATUS." "YELLO"
fi

exit $SANITY_STATUS

